//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MinorityDashboard.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MinorityDasboard_DBEntities : DbContext
    {
        public MinorityDasboard_DBEntities()
            : base("name=MinorityDasboard_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<desk_master> desk_master { get; set; }
        public virtual DbSet<district_master> district_master { get; set; }
        public virtual DbSet<financialyear_master> financialyear_master { get; set; }
        public virtual DbSet<scheme_master> scheme_master { get; set; }
        public virtual DbSet<subject_master> subject_master { get; set; }
        public virtual DbSet<estimation_master> estimation_master { get; set; }
        public virtual DbSet<deskdocument> deskdocuments { get; set; }
        public virtual DbSet<menu_master> menu_master { get; set; }
        public virtual DbSet<role_master> role_master { get; set; }
        public virtual DbSet<deskdata_trans_bak> deskdata_trans_bak { get; set; }
        public virtual DbSet<trans_docfile> trans_docfile { get; set; }
        public virtual DbSet<login> logins { get; set; }
        public virtual DbSet<deskdata_trans> deskdata_trans { get; set; }
        public virtual DbSet<main_menu_master> main_menu_master { get; set; }
        public virtual DbSet<sub_menu_master> sub_menu_master { get; set; }
        public virtual DbSet<menu_role_mapping> menu_role_mapping { get; set; }
    
        public virtual ObjectResult<GetDeskTransactionData_Result> GetDeskTransactionData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeskTransactionData_Result>("GetDeskTransactionData");
        }
    
        public virtual ObjectResult<GetSubjectData_Result> GetSubjectData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectData_Result>("GetSubjectData");
        }
    
        public virtual ObjectResult<GetDeskDocuments_Result> GetDeskDocuments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeskDocuments_Result>("GetDeskDocuments");
        }
    
        public virtual ObjectResult<LoginByUsernamePassword_Result> LoginByUsernamePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginByUsernamePassword_Result>("LoginByUsernamePassword", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<CheckAuthorizeMenu_Result> CheckAuthorizeMenu(string username, string pageurl)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pageurlParameter = pageurl != null ?
                new ObjectParameter("pageurl", pageurl) :
                new ObjectParameter("pageurl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckAuthorizeMenu_Result>("CheckAuthorizeMenu", usernameParameter, pageurlParameter);
        }
    
        public virtual ObjectResult<GetSchemeData_Result> GetSchemeData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSchemeData_Result>("GetSchemeData");
        }
    }
}
